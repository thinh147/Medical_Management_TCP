/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gogitek.clientapp.view.thuoc;



import com.gogitek.demotcp.dao.MonAnDAO;
import com.gogitek.demotcp.model.MonAn;
import com.gogitek.demotcp.view.Home;
//import com.gogitek.clientapp.view.thuoc.JSuaMonAn;

import java.util.List;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hoang
 */
public class JMonAn extends javax.swing.JFrame {

    private MonAnDAO MonDAO = new MonAnDAO();
    private List<MonAn> list;

    /**
     * Creates new form MonAn
     */
    public JMonAn() {
        initComponents(); 
        tableMonAn.setEnabled(false);
        initData();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    public void initData() {
        try {
            list = MonDAO.getAll();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        DefaultTableModel model = (DefaultTableModel) tableMonAn.getModel();
        for (MonAn value : list) {
            Object[] rowData = new Object[7];
            rowData[0] = value.getId();
            rowData[1] = value.getMa_mon();
            rowData[2] = value.getTen_mon();
            rowData[3] = value.getHinh_anh();
            rowData[4] = value.getGia();
            rowData[5] = value.getThoi_gian();
            rowData[6] = value.getLoai_mon_id();
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMonAn = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        inputName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        typeSearch = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tableMonAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Mã món", "Tên món", "Hình ảnh", "Giá đặt", "Thời gian phục vụ", "ID Loại món"
            }
        ));
        tableMonAn.setEnabled(false);
        tableMonAn.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tableMonAnComponentAdded(evt);
            }
        });
        tableMonAn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMonAnMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableMonAnMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableMonAn);

        jLabel1.setText("QUẢN LÝ MÓN ĂN");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        inputName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNameActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        typeSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giá đặt", "Thời gian phục vụ", "Loại món ăn" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(typeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnRefresh)
                    .addComponent(typeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNameActionPerformed

    private void tableMonAnComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tableMonAnComponentAdded
        // TODO add your handling code here:        
    }//GEN-LAST:event_tableMonAnComponentAdded

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        new JThemMonAn().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnThemActionPerformed

    private void tableMonAnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMonAnMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableMonAn.getModel();
        Vector<Object> v = (Vector<Object>) model.getDataVector().elementAt(tableMonAn.convertRowIndexToModel(tableMonAn.rowAtPoint(evt.getPoint())));
        MonAn mon1 = new MonAn((Long) v.get(0), (String) v.get(1), (String) v.get(2), (String) v.get(3),
                (Integer) v.get(4), (Integer) v.get(5), (Long) v.get(6));
        (new JSuaMonAn(mon1)).setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_tableMonAnMouseClicked

    private void tableMonAnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMonAnMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMonAnMousePressed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:        
        inputName.setText("");
        DefaultTableModel model = (DefaultTableModel) tableMonAn.getModel();
        model.setRowCount(0);
        List<MonAn> list1 = null;
        try {
            list1 = MonDAO.getAll();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        for (MonAn value : list1) {
            Object[] rowData = new Object[7];
            rowData[0] = value.getId();
            rowData[1] = value.getMa_mon();
            rowData[2] = value.getTen_mon();
            rowData[3] = value.getHinh_anh();
            rowData[4] = value.getGia();
            rowData[5] = value.getThoi_gian();
            rowData[6] = value.getLoai_mon_id();
            model.addRow(rowData);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        // TODO add your handling code here:            
        DefaultTableModel model = (DefaultTableModel) tableMonAn.getModel();
        model.setRowCount(0);
        List<MonAn> list1 = null;

        int index = typeSearch.getSelectedIndex();
        switch (index) {
            case 0:
                try {
                    int gia = Integer.parseInt(inputName.getText());
                    list1 = MonDAO.searchMonAnByGia(gia);
                } catch (Exception e) {
                    try {
                        list1 = MonDAO.getAll();
                    } catch (Exception  ex) {
                        ex.printStackTrace();
                    }
                }
                break;
            case 1:
                try {
                    int tg = Integer.parseInt(inputName.getText());
                    list1 = MonDAO.searchMonAnByThoiGian(tg);
                } catch (Exception e) {
                    try {
                        list1 = MonDAO.getAll();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
                break;
            case 2:
                try {
                    Long id_loai_mon = Long.valueOf(inputName.getText());
                    list1 = MonDAO.searchMonAnByLoaiMon(id_loai_mon);
                } catch (Exception e) {
                    try {
                        list1 = MonDAO.getAll();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
                break;
        }
        for (MonAn value : list1) {
            Object[] rowData = new Object[7];
            rowData[0] = value.getId();
            rowData[1] = value.getMa_mon();
            rowData[2] = value.getTen_mon();
            rowData[3] = value.getHinh_anh();
            rowData[4] = value.getGia();
            rowData[5] = value.getThoi_gian();
            rowData[6] = value.getLoai_mon_id();
            model.addRow(rowData);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        new Home().setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JMonAn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnThem;
    private javax.swing.JTextField inputName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMonAn;
    private javax.swing.JComboBox<String> typeSearch;
    // End of variables declaration//GEN-END:variables
}
